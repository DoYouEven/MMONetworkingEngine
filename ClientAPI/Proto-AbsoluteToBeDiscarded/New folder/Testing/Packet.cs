// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace packets {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public static partial class Testpacket {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_packets_Packet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::packets.Packet, global::packets.Packet.Builder> internal__static_packets_Packet__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_packets_Header__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::packets.Header, global::packets.Header.Builder> internal__static_packets_Header__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_packets_Payload__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::packets.Payload, global::packets.Payload.Builder> internal__static_packets_Payload__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_packets_LoginPayload__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::packets.LoginPayload, global::packets.LoginPayload.Builder> internal__static_packets_LoginPayload__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_packets_PlayerDataPayload__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::packets.PlayerDataPayload, global::packets.PlayerDataPayload.Builder> internal__static_packets_PlayerDataPayload__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_packets_LOCATION__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::packets.LOCATION, global::packets.LOCATION.Builder> internal__static_packets_LOCATION__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_packets_POKEMON__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::packets.POKEMON, global::packets.POKEMON.Builder> internal__static_packets_POKEMON__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Testpacket() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChB0ZXN0cGFja2V0LnByb3RvEgdwYWNrZXRzIkwKBlBhY2tldBIfCgZoZWFk" + 
          "ZXIYASACKAsyDy5wYWNrZXRzLkhlYWRlchIhCgdwYXlsb2FkGAIgAigLMhAu" + 
          "cGFja2V0cy5QYXlsb2FkIj4KBkhlYWRlchIKCgJpZBgBIAIoBRIoCgR0eXBl" + 
          "GAIgASgOMhMucGFja2V0cy5QYWNrZXRUeXBlOgVMT0dJTiJtCgdQYXlsb2Fk" + 
          "EisKDGxvZ2lucGF5bG9hZBgBIAEoCzIVLnBhY2tldHMuTG9naW5QYXlsb2Fk" + 
          "EjUKEXBsYXllcmRhdGFwYXlsb2FkGAIgASgLMhoucGFja2V0cy5QbGF5ZXJE" + 
          "YXRhUGF5bG9hZCJBCgxMb2dpblBheWxvYWQSEAoIdXNlcm5hbWUYASACKAkS" + 
          "EAoIcGFzc3dvcmQYAiACKAkSDQoFZW1haWwYAyACKAkidwoRUGxheWVyRGF0" + 
          "YVBheWxvYWQSCgoCaWQYASACKAUSIwoIbG9jYXRpb24YAiABKAsyES5wYWNr" + 
          "ZXRzLkxPQ0FUSU9OEhAKCHVzZXJuYW1lGAMgASgJEh8KBXBhcnR5GAQgAygL" + 
          "MhAucGFja2V0cy5QT0tFTU9OIlUKCExPQ0FUSU9OEgkKAVgYASACKAESCQoB" + 
          "WRgCIAIoARIJCgFaGAMgAigBEg0KBVBpdGNoGAQgASgBEgsKA1lhdxgFIAEo" + 
          "ARIMCgRSb2xsGAYgASgBIiIKB1BPS0VNT04SCgoCaWQYASACKAUSCwoDZGV4" + 
          "GAIgAigFKjIKClBhY2tldFR5cGUSCQoFTE9HSU4QABIICgRHQU1FEAESDwoL" + 
          "UExBWUVSX0RBVEEQAkICSAE=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_packets_Packet__Descriptor = Descriptor.MessageTypes[0];
        internal__static_packets_Packet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::packets.Packet, global::packets.Packet.Builder>(internal__static_packets_Packet__Descriptor,
                new string[] { "Header", "Payload", });
        internal__static_packets_Header__Descriptor = Descriptor.MessageTypes[1];
        internal__static_packets_Header__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::packets.Header, global::packets.Header.Builder>(internal__static_packets_Header__Descriptor,
                new string[] { "Id", "Type", });
        internal__static_packets_Payload__Descriptor = Descriptor.MessageTypes[2];
        internal__static_packets_Payload__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::packets.Payload, global::packets.Payload.Builder>(internal__static_packets_Payload__Descriptor,
                new string[] { "Loginpayload", "Playerdatapayload", });
        internal__static_packets_LoginPayload__Descriptor = Descriptor.MessageTypes[3];
        internal__static_packets_LoginPayload__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::packets.LoginPayload, global::packets.LoginPayload.Builder>(internal__static_packets_LoginPayload__Descriptor,
                new string[] { "Username", "Password", "Email", });
        internal__static_packets_PlayerDataPayload__Descriptor = Descriptor.MessageTypes[4];
        internal__static_packets_PlayerDataPayload__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::packets.PlayerDataPayload, global::packets.PlayerDataPayload.Builder>(internal__static_packets_PlayerDataPayload__Descriptor,
                new string[] { "Id", "Location", "Username", "Party", });
        internal__static_packets_LOCATION__Descriptor = Descriptor.MessageTypes[5];
        internal__static_packets_LOCATION__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::packets.LOCATION, global::packets.LOCATION.Builder>(internal__static_packets_LOCATION__Descriptor,
                new string[] { "X", "Y", "Z", "Pitch", "Yaw", "Roll", });
        internal__static_packets_POKEMON__Descriptor = Descriptor.MessageTypes[6];
        internal__static_packets_POKEMON__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::packets.POKEMON, global::packets.POKEMON.Builder>(internal__static_packets_POKEMON__Descriptor,
                new string[] { "Id", "Dex", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public enum PacketType {
    LOGIN = 0,
    GAME = 1,
    PLAYER_DATA = 2,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class Packet : pb::GeneratedMessage<Packet, Packet.Builder> {
    private Packet() { }
    private static readonly Packet defaultInstance = new Packet().MakeReadOnly();
    private static readonly string[] _packetFieldNames = new string[] { "header", "payload" };
    private static readonly uint[] _packetFieldTags = new uint[] { 10, 18 };
    public static Packet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Packet DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Packet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::packets.Testpacket.internal__static_packets_Packet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Packet, Packet.Builder> InternalFieldAccessors {
      get { return global::packets.Testpacket.internal__static_packets_Packet__FieldAccessorTable; }
    }
    
    public const int HeaderFieldNumber = 1;
    private bool hasHeader;
    private global::packets.Header header_;
    public bool HasHeader {
      get { return hasHeader; }
    }
    public global::packets.Header Header {
      get { return header_ ?? global::packets.Header.DefaultInstance; }
    }
    
    public const int PayloadFieldNumber = 2;
    private bool hasPayload;
    private global::packets.Payload payload_;
    public bool HasPayload {
      get { return hasPayload; }
    }
    public global::packets.Payload Payload {
      get { return payload_ ?? global::packets.Payload.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHeader) return false;
        if (!hasPayload) return false;
        if (!Header.IsInitialized) return false;
        if (!Payload.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _packetFieldNames;
      if (hasHeader) {
        output.WriteMessage(1, field_names[0], Header);
      }
      if (hasPayload) {
        output.WriteMessage(2, field_names[1], Payload);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHeader) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Header);
        }
        if (hasPayload) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Payload);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Packet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Packet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Packet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Packet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Packet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Packet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Packet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Packet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Packet ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Packet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Packet MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Packet prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<Packet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Packet cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Packet result;
      
      private Packet PrepareBuilder() {
        if (resultIsReadOnly) {
          Packet original = result;
          result = new Packet();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Packet MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::packets.Packet.Descriptor; }
      }
      
      public override Packet DefaultInstanceForType {
        get { return global::packets.Packet.DefaultInstance; }
      }
      
      public override Packet BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Packet) {
          return MergeFrom((Packet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Packet other) {
        if (other == global::packets.Packet.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHeader) {
          MergeHeader(other.Header);
        }
        if (other.HasPayload) {
          MergePayload(other.Payload);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_packetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _packetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::packets.Header.Builder subBuilder = global::packets.Header.CreateBuilder();
              if (result.hasHeader) {
                subBuilder.MergeFrom(Header);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Header = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::packets.Payload.Builder subBuilder = global::packets.Payload.CreateBuilder();
              if (result.hasPayload) {
                subBuilder.MergeFrom(Payload);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Payload = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHeader {
       get { return result.hasHeader; }
      }
      public global::packets.Header Header {
        get { return result.Header; }
        set { SetHeader(value); }
      }
      public Builder SetHeader(global::packets.Header value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHeader = true;
        result.header_ = value;
        return this;
      }
      public Builder SetHeader(global::packets.Header.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHeader = true;
        result.header_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHeader(global::packets.Header value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHeader &&
            result.header_ != global::packets.Header.DefaultInstance) {
            result.header_ = global::packets.Header.CreateBuilder(result.header_).MergeFrom(value).BuildPartial();
        } else {
          result.header_ = value;
        }
        result.hasHeader = true;
        return this;
      }
      public Builder ClearHeader() {
        PrepareBuilder();
        result.hasHeader = false;
        result.header_ = null;
        return this;
      }
      
      public bool HasPayload {
       get { return result.hasPayload; }
      }
      public global::packets.Payload Payload {
        get { return result.Payload; }
        set { SetPayload(value); }
      }
      public Builder SetPayload(global::packets.Payload value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPayload = true;
        result.payload_ = value;
        return this;
      }
      public Builder SetPayload(global::packets.Payload.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPayload = true;
        result.payload_ = builderForValue.Build();
        return this;
      }
      public Builder MergePayload(global::packets.Payload value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPayload &&
            result.payload_ != global::packets.Payload.DefaultInstance) {
            result.payload_ = global::packets.Payload.CreateBuilder(result.payload_).MergeFrom(value).BuildPartial();
        } else {
          result.payload_ = value;
        }
        result.hasPayload = true;
        return this;
      }
      public Builder ClearPayload() {
        PrepareBuilder();
        result.hasPayload = false;
        result.payload_ = null;
        return this;
      }
    }
    static Packet() {
      object.ReferenceEquals(global::packets.Testpacket.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class Header : pb::GeneratedMessage<Header, Header.Builder> {
    private Header() { }
    private static readonly Header defaultInstance = new Header().MakeReadOnly();
    private static readonly string[] _headerFieldNames = new string[] { "id", "type" };
    private static readonly uint[] _headerFieldTags = new uint[] { 8, 16 };
    public static Header DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Header DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Header ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::packets.Testpacket.internal__static_packets_Header__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Header, Header.Builder> InternalFieldAccessors {
      get { return global::packets.Testpacket.internal__static_packets_Header__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::packets.PacketType type_ = global::packets.PacketType.LOGIN;
    public bool HasType {
      get { return hasType; }
    }
    public global::packets.PacketType Type {
      get { return type_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _headerFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[0], Id);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[1], (int) Type, Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Header ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Header ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Header ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Header ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Header ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Header ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Header ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Header ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Header ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Header ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Header MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Header prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<Header, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Header cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Header result;
      
      private Header PrepareBuilder() {
        if (resultIsReadOnly) {
          Header original = result;
          result = new Header();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Header MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::packets.Header.Descriptor; }
      }
      
      public override Header DefaultInstanceForType {
        get { return global::packets.Header.DefaultInstance; }
      }
      
      public override Header BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Header) {
          return MergeFrom((Header) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Header other) {
        if (other == global::packets.Header.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_headerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _headerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::packets.PacketType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::packets.PacketType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::packets.PacketType.LOGIN;
        return this;
      }
    }
    static Header() {
      object.ReferenceEquals(global::packets.Testpacket.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class Payload : pb::GeneratedMessage<Payload, Payload.Builder> {
    private Payload() { }
    private static readonly Payload defaultInstance = new Payload().MakeReadOnly();
    private static readonly string[] _payloadFieldNames = new string[] { "loginpayload", "playerdatapayload" };
    private static readonly uint[] _payloadFieldTags = new uint[] { 10, 18 };
    public static Payload DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Payload DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Payload ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::packets.Testpacket.internal__static_packets_Payload__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Payload, Payload.Builder> InternalFieldAccessors {
      get { return global::packets.Testpacket.internal__static_packets_Payload__FieldAccessorTable; }
    }
    
    public const int LoginpayloadFieldNumber = 1;
    private bool hasLoginpayload;
    private global::packets.LoginPayload loginpayload_;
    public bool HasLoginpayload {
      get { return hasLoginpayload; }
    }
    public global::packets.LoginPayload Loginpayload {
      get { return loginpayload_ ?? global::packets.LoginPayload.DefaultInstance; }
    }
    
    public const int PlayerdatapayloadFieldNumber = 2;
    private bool hasPlayerdatapayload;
    private global::packets.PlayerDataPayload playerdatapayload_;
    public bool HasPlayerdatapayload {
      get { return hasPlayerdatapayload; }
    }
    public global::packets.PlayerDataPayload Playerdatapayload {
      get { return playerdatapayload_ ?? global::packets.PlayerDataPayload.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasLoginpayload) {
          if (!Loginpayload.IsInitialized) return false;
        }
        if (HasPlayerdatapayload) {
          if (!Playerdatapayload.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _payloadFieldNames;
      if (hasLoginpayload) {
        output.WriteMessage(1, field_names[0], Loginpayload);
      }
      if (hasPlayerdatapayload) {
        output.WriteMessage(2, field_names[1], Playerdatapayload);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasLoginpayload) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Loginpayload);
        }
        if (hasPlayerdatapayload) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Playerdatapayload);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Payload ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Payload ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Payload ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Payload ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Payload ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Payload ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Payload ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Payload ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Payload ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Payload ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Payload MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Payload prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<Payload, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Payload cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Payload result;
      
      private Payload PrepareBuilder() {
        if (resultIsReadOnly) {
          Payload original = result;
          result = new Payload();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Payload MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::packets.Payload.Descriptor; }
      }
      
      public override Payload DefaultInstanceForType {
        get { return global::packets.Payload.DefaultInstance; }
      }
      
      public override Payload BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Payload) {
          return MergeFrom((Payload) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Payload other) {
        if (other == global::packets.Payload.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginpayload) {
          MergeLoginpayload(other.Loginpayload);
        }
        if (other.HasPlayerdatapayload) {
          MergePlayerdatapayload(other.Playerdatapayload);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_payloadFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _payloadFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::packets.LoginPayload.Builder subBuilder = global::packets.LoginPayload.CreateBuilder();
              if (result.hasLoginpayload) {
                subBuilder.MergeFrom(Loginpayload);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Loginpayload = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::packets.PlayerDataPayload.Builder subBuilder = global::packets.PlayerDataPayload.CreateBuilder();
              if (result.hasPlayerdatapayload) {
                subBuilder.MergeFrom(Playerdatapayload);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Playerdatapayload = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginpayload {
       get { return result.hasLoginpayload; }
      }
      public global::packets.LoginPayload Loginpayload {
        get { return result.Loginpayload; }
        set { SetLoginpayload(value); }
      }
      public Builder SetLoginpayload(global::packets.LoginPayload value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginpayload = true;
        result.loginpayload_ = value;
        return this;
      }
      public Builder SetLoginpayload(global::packets.LoginPayload.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLoginpayload = true;
        result.loginpayload_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLoginpayload(global::packets.LoginPayload value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLoginpayload &&
            result.loginpayload_ != global::packets.LoginPayload.DefaultInstance) {
            result.loginpayload_ = global::packets.LoginPayload.CreateBuilder(result.loginpayload_).MergeFrom(value).BuildPartial();
        } else {
          result.loginpayload_ = value;
        }
        result.hasLoginpayload = true;
        return this;
      }
      public Builder ClearLoginpayload() {
        PrepareBuilder();
        result.hasLoginpayload = false;
        result.loginpayload_ = null;
        return this;
      }
      
      public bool HasPlayerdatapayload {
       get { return result.hasPlayerdatapayload; }
      }
      public global::packets.PlayerDataPayload Playerdatapayload {
        get { return result.Playerdatapayload; }
        set { SetPlayerdatapayload(value); }
      }
      public Builder SetPlayerdatapayload(global::packets.PlayerDataPayload value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPlayerdatapayload = true;
        result.playerdatapayload_ = value;
        return this;
      }
      public Builder SetPlayerdatapayload(global::packets.PlayerDataPayload.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPlayerdatapayload = true;
        result.playerdatapayload_ = builderForValue.Build();
        return this;
      }
      public Builder MergePlayerdatapayload(global::packets.PlayerDataPayload value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPlayerdatapayload &&
            result.playerdatapayload_ != global::packets.PlayerDataPayload.DefaultInstance) {
            result.playerdatapayload_ = global::packets.PlayerDataPayload.CreateBuilder(result.playerdatapayload_).MergeFrom(value).BuildPartial();
        } else {
          result.playerdatapayload_ = value;
        }
        result.hasPlayerdatapayload = true;
        return this;
      }
      public Builder ClearPlayerdatapayload() {
        PrepareBuilder();
        result.hasPlayerdatapayload = false;
        result.playerdatapayload_ = null;
        return this;
      }
    }
    static Payload() {
      object.ReferenceEquals(global::packets.Testpacket.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class LoginPayload : pb::GeneratedMessage<LoginPayload, LoginPayload.Builder> {
    private LoginPayload() { }
    private static readonly LoginPayload defaultInstance = new LoginPayload().MakeReadOnly();
    private static readonly string[] _loginPayloadFieldNames = new string[] { "email", "password", "username" };
    private static readonly uint[] _loginPayloadFieldTags = new uint[] { 26, 18, 10 };
    public static LoginPayload DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginPayload DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginPayload ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::packets.Testpacket.internal__static_packets_LoginPayload__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginPayload, LoginPayload.Builder> InternalFieldAccessors {
      get { return global::packets.Testpacket.internal__static_packets_LoginPayload__FieldAccessorTable; }
    }
    
    public const int UsernameFieldNumber = 1;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    public const int PasswordFieldNumber = 2;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int EmailFieldNumber = 3;
    private bool hasEmail;
    private string email_ = "";
    public bool HasEmail {
      get { return hasEmail; }
    }
    public string Email {
      get { return email_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUsername) return false;
        if (!hasPassword) return false;
        if (!hasEmail) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _loginPayloadFieldNames;
      if (hasUsername) {
        output.WriteString(1, field_names[2], Username);
      }
      if (hasPassword) {
        output.WriteString(2, field_names[1], Password);
      }
      if (hasEmail) {
        output.WriteString(3, field_names[0], Email);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Username);
        }
        if (hasPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Password);
        }
        if (hasEmail) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Email);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LoginPayload ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginPayload ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginPayload ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginPayload ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginPayload ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginPayload ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginPayload ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginPayload ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginPayload ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginPayload ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginPayload MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginPayload prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginPayload, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginPayload cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginPayload result;
      
      private LoginPayload PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginPayload original = result;
          result = new LoginPayload();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginPayload MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::packets.LoginPayload.Descriptor; }
      }
      
      public override LoginPayload DefaultInstanceForType {
        get { return global::packets.LoginPayload.DefaultInstance; }
      }
      
      public override LoginPayload BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginPayload) {
          return MergeFrom((LoginPayload) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginPayload other) {
        if (other == global::packets.LoginPayload.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUsername) {
          Username = other.Username;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasEmail) {
          Email = other.Email;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginPayloadFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginPayloadFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
            case 18: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 26: {
              result.hasEmail = input.ReadString(ref result.email_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasEmail {
        get { return result.hasEmail; }
      }
      public string Email {
        get { return result.Email; }
        set { SetEmail(value); }
      }
      public Builder SetEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.hasEmail = false;
        result.email_ = "";
        return this;
      }
    }
    static LoginPayload() {
      object.ReferenceEquals(global::packets.Testpacket.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class PlayerDataPayload : pb::GeneratedMessage<PlayerDataPayload, PlayerDataPayload.Builder> {
    private PlayerDataPayload() { }
    private static readonly PlayerDataPayload defaultInstance = new PlayerDataPayload().MakeReadOnly();
    private static readonly string[] _playerDataPayloadFieldNames = new string[] { "id", "location", "party", "username" };
    private static readonly uint[] _playerDataPayloadFieldTags = new uint[] { 8, 18, 34, 26 };
    public static PlayerDataPayload DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlayerDataPayload DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayerDataPayload ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::packets.Testpacket.internal__static_packets_PlayerDataPayload__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlayerDataPayload, PlayerDataPayload.Builder> InternalFieldAccessors {
      get { return global::packets.Testpacket.internal__static_packets_PlayerDataPayload__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int LocationFieldNumber = 2;
    private bool hasLocation;
    private global::packets.LOCATION location_;
    public bool HasLocation {
      get { return hasLocation; }
    }
    public global::packets.LOCATION Location {
      get { return location_ ?? global::packets.LOCATION.DefaultInstance; }
    }
    
    public const int UsernameFieldNumber = 3;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    public const int PartyFieldNumber = 4;
    private pbc::PopsicleList<global::packets.POKEMON> party_ = new pbc::PopsicleList<global::packets.POKEMON>();
    public scg::IList<global::packets.POKEMON> PartyList {
      get { return party_; }
    }
    public int PartyCount {
      get { return party_.Count; }
    }
    public global::packets.POKEMON GetParty(int index) {
      return party_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (HasLocation) {
          if (!Location.IsInitialized) return false;
        }
        foreach (global::packets.POKEMON element in PartyList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerDataPayloadFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[0], Id);
      }
      if (hasLocation) {
        output.WriteMessage(2, field_names[1], Location);
      }
      if (hasUsername) {
        output.WriteString(3, field_names[3], Username);
      }
      if (party_.Count > 0) {
        output.WriteMessageArray(4, field_names[2], party_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasLocation) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Location);
        }
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Username);
        }
        foreach (global::packets.POKEMON element in PartyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlayerDataPayload ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerDataPayload ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerDataPayload ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerDataPayload ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerDataPayload ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerDataPayload ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlayerDataPayload ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlayerDataPayload ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlayerDataPayload ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerDataPayload ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayerDataPayload MakeReadOnly() {
      party_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlayerDataPayload prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlayerDataPayload, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayerDataPayload cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayerDataPayload result;
      
      private PlayerDataPayload PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayerDataPayload original = result;
          result = new PlayerDataPayload();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayerDataPayload MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::packets.PlayerDataPayload.Descriptor; }
      }
      
      public override PlayerDataPayload DefaultInstanceForType {
        get { return global::packets.PlayerDataPayload.DefaultInstance; }
      }
      
      public override PlayerDataPayload BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlayerDataPayload) {
          return MergeFrom((PlayerDataPayload) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerDataPayload other) {
        if (other == global::packets.PlayerDataPayload.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasLocation) {
          MergeLocation(other.Location);
        }
        if (other.HasUsername) {
          Username = other.Username;
        }
        if (other.party_.Count != 0) {
          result.party_.Add(other.party_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerDataPayloadFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerDataPayloadFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 18: {
              global::packets.LOCATION.Builder subBuilder = global::packets.LOCATION.CreateBuilder();
              if (result.hasLocation) {
                subBuilder.MergeFrom(Location);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Location = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.party_, global::packets.POKEMON.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasLocation {
       get { return result.hasLocation; }
      }
      public global::packets.LOCATION Location {
        get { return result.Location; }
        set { SetLocation(value); }
      }
      public Builder SetLocation(global::packets.LOCATION value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLocation = true;
        result.location_ = value;
        return this;
      }
      public Builder SetLocation(global::packets.LOCATION.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLocation = true;
        result.location_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLocation(global::packets.LOCATION value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLocation &&
            result.location_ != global::packets.LOCATION.DefaultInstance) {
            result.location_ = global::packets.LOCATION.CreateBuilder(result.location_).MergeFrom(value).BuildPartial();
        } else {
          result.location_ = value;
        }
        result.hasLocation = true;
        return this;
      }
      public Builder ClearLocation() {
        PrepareBuilder();
        result.hasLocation = false;
        result.location_ = null;
        return this;
      }
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::packets.POKEMON> PartyList {
        get { return PrepareBuilder().party_; }
      }
      public int PartyCount {
        get { return result.PartyCount; }
      }
      public global::packets.POKEMON GetParty(int index) {
        return result.GetParty(index);
      }
      public Builder SetParty(int index, global::packets.POKEMON value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.party_[index] = value;
        return this;
      }
      public Builder SetParty(int index, global::packets.POKEMON.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.party_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddParty(global::packets.POKEMON value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.party_.Add(value);
        return this;
      }
      public Builder AddParty(global::packets.POKEMON.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.party_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeParty(scg::IEnumerable<global::packets.POKEMON> values) {
        PrepareBuilder();
        result.party_.Add(values);
        return this;
      }
      public Builder ClearParty() {
        PrepareBuilder();
        result.party_.Clear();
        return this;
      }
    }
    static PlayerDataPayload() {
      object.ReferenceEquals(global::packets.Testpacket.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class LOCATION : pb::GeneratedMessage<LOCATION, LOCATION.Builder> {
    private LOCATION() { }
    private static readonly LOCATION defaultInstance = new LOCATION().MakeReadOnly();
    private static readonly string[] _lOCATIONFieldNames = new string[] { "Pitch", "Roll", "X", "Y", "Yaw", "Z" };
    private static readonly uint[] _lOCATIONFieldTags = new uint[] { 33, 49, 9, 17, 41, 25 };
    public static LOCATION DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LOCATION DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LOCATION ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::packets.Testpacket.internal__static_packets_LOCATION__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LOCATION, LOCATION.Builder> InternalFieldAccessors {
      get { return global::packets.Testpacket.internal__static_packets_LOCATION__FieldAccessorTable; }
    }
    
    public const int XFieldNumber = 1;
    private bool hasX;
    private double x_;
    public bool HasX {
      get { return hasX; }
    }
    public double X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 2;
    private bool hasY;
    private double y_;
    public bool HasY {
      get { return hasY; }
    }
    public double Y {
      get { return y_; }
    }
    
    public const int ZFieldNumber = 3;
    private bool hasZ;
    private double z_;
    public bool HasZ {
      get { return hasZ; }
    }
    public double Z {
      get { return z_; }
    }
    
    public const int PitchFieldNumber = 4;
    private bool hasPitch;
    private double pitch_;
    public bool HasPitch {
      get { return hasPitch; }
    }
    public double Pitch {
      get { return pitch_; }
    }
    
    public const int YawFieldNumber = 5;
    private bool hasYaw;
    private double yaw_;
    public bool HasYaw {
      get { return hasYaw; }
    }
    public double Yaw {
      get { return yaw_; }
    }
    
    public const int RollFieldNumber = 6;
    private bool hasRoll;
    private double roll_;
    public bool HasRoll {
      get { return hasRoll; }
    }
    public double Roll {
      get { return roll_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasX) return false;
        if (!hasY) return false;
        if (!hasZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _lOCATIONFieldNames;
      if (hasX) {
        output.WriteDouble(1, field_names[2], X);
      }
      if (hasY) {
        output.WriteDouble(2, field_names[3], Y);
      }
      if (hasZ) {
        output.WriteDouble(3, field_names[5], Z);
      }
      if (hasPitch) {
        output.WriteDouble(4, field_names[0], Pitch);
      }
      if (hasYaw) {
        output.WriteDouble(5, field_names[4], Yaw);
      }
      if (hasRoll) {
        output.WriteDouble(6, field_names[1], Roll);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasX) {
          size += pb::CodedOutputStream.ComputeDoubleSize(1, X);
        }
        if (hasY) {
          size += pb::CodedOutputStream.ComputeDoubleSize(2, Y);
        }
        if (hasZ) {
          size += pb::CodedOutputStream.ComputeDoubleSize(3, Z);
        }
        if (hasPitch) {
          size += pb::CodedOutputStream.ComputeDoubleSize(4, Pitch);
        }
        if (hasYaw) {
          size += pb::CodedOutputStream.ComputeDoubleSize(5, Yaw);
        }
        if (hasRoll) {
          size += pb::CodedOutputStream.ComputeDoubleSize(6, Roll);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LOCATION ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LOCATION ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LOCATION ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LOCATION ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LOCATION ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LOCATION ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LOCATION ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LOCATION ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LOCATION ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LOCATION ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LOCATION MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LOCATION prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<LOCATION, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LOCATION cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LOCATION result;
      
      private LOCATION PrepareBuilder() {
        if (resultIsReadOnly) {
          LOCATION original = result;
          result = new LOCATION();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LOCATION MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::packets.LOCATION.Descriptor; }
      }
      
      public override LOCATION DefaultInstanceForType {
        get { return global::packets.LOCATION.DefaultInstance; }
      }
      
      public override LOCATION BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LOCATION) {
          return MergeFrom((LOCATION) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LOCATION other) {
        if (other == global::packets.LOCATION.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasZ) {
          Z = other.Z;
        }
        if (other.HasPitch) {
          Pitch = other.Pitch;
        }
        if (other.HasYaw) {
          Yaw = other.Yaw;
        }
        if (other.HasRoll) {
          Roll = other.Roll;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_lOCATIONFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _lOCATIONFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasX = input.ReadDouble(ref result.x_);
              break;
            }
            case 17: {
              result.hasY = input.ReadDouble(ref result.y_);
              break;
            }
            case 25: {
              result.hasZ = input.ReadDouble(ref result.z_);
              break;
            }
            case 33: {
              result.hasPitch = input.ReadDouble(ref result.pitch_);
              break;
            }
            case 41: {
              result.hasYaw = input.ReadDouble(ref result.yaw_);
              break;
            }
            case 49: {
              result.hasRoll = input.ReadDouble(ref result.roll_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasX {
        get { return result.hasX; }
      }
      public double X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(double value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0D;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public double Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(double value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0D;
        return this;
      }
      
      public bool HasZ {
        get { return result.hasZ; }
      }
      public double Z {
        get { return result.Z; }
        set { SetZ(value); }
      }
      public Builder SetZ(double value) {
        PrepareBuilder();
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder ClearZ() {
        PrepareBuilder();
        result.hasZ = false;
        result.z_ = 0D;
        return this;
      }
      
      public bool HasPitch {
        get { return result.hasPitch; }
      }
      public double Pitch {
        get { return result.Pitch; }
        set { SetPitch(value); }
      }
      public Builder SetPitch(double value) {
        PrepareBuilder();
        result.hasPitch = true;
        result.pitch_ = value;
        return this;
      }
      public Builder ClearPitch() {
        PrepareBuilder();
        result.hasPitch = false;
        result.pitch_ = 0D;
        return this;
      }
      
      public bool HasYaw {
        get { return result.hasYaw; }
      }
      public double Yaw {
        get { return result.Yaw; }
        set { SetYaw(value); }
      }
      public Builder SetYaw(double value) {
        PrepareBuilder();
        result.hasYaw = true;
        result.yaw_ = value;
        return this;
      }
      public Builder ClearYaw() {
        PrepareBuilder();
        result.hasYaw = false;
        result.yaw_ = 0D;
        return this;
      }
      
      public bool HasRoll {
        get { return result.hasRoll; }
      }
      public double Roll {
        get { return result.Roll; }
        set { SetRoll(value); }
      }
      public Builder SetRoll(double value) {
        PrepareBuilder();
        result.hasRoll = true;
        result.roll_ = value;
        return this;
      }
      public Builder ClearRoll() {
        PrepareBuilder();
        result.hasRoll = false;
        result.roll_ = 0D;
        return this;
      }
    }
    static LOCATION() {
      object.ReferenceEquals(global::packets.Testpacket.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class POKEMON : pb::GeneratedMessage<POKEMON, POKEMON.Builder> {
    private POKEMON() { }
    private static readonly POKEMON defaultInstance = new POKEMON().MakeReadOnly();
    private static readonly string[] _pOKEMONFieldNames = new string[] { "dex", "id" };
    private static readonly uint[] _pOKEMONFieldTags = new uint[] { 16, 8 };
    public static POKEMON DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override POKEMON DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override POKEMON ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::packets.Testpacket.internal__static_packets_POKEMON__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<POKEMON, POKEMON.Builder> InternalFieldAccessors {
      get { return global::packets.Testpacket.internal__static_packets_POKEMON__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int DexFieldNumber = 2;
    private bool hasDex;
    private int dex_;
    public bool HasDex {
      get { return hasDex; }
    }
    public int Dex {
      get { return dex_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasDex) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pOKEMONFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[1], Id);
      }
      if (hasDex) {
        output.WriteInt32(2, field_names[0], Dex);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasDex) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Dex);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static POKEMON ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static POKEMON ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static POKEMON ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static POKEMON ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static POKEMON ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static POKEMON ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static POKEMON ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static POKEMON ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static POKEMON ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static POKEMON ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private POKEMON MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(POKEMON prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<POKEMON, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(POKEMON cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private POKEMON result;
      
      private POKEMON PrepareBuilder() {
        if (resultIsReadOnly) {
          POKEMON original = result;
          result = new POKEMON();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override POKEMON MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::packets.POKEMON.Descriptor; }
      }
      
      public override POKEMON DefaultInstanceForType {
        get { return global::packets.POKEMON.DefaultInstance; }
      }
      
      public override POKEMON BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is POKEMON) {
          return MergeFrom((POKEMON) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(POKEMON other) {
        if (other == global::packets.POKEMON.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasDex) {
          Dex = other.Dex;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pOKEMONFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pOKEMONFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 16: {
              result.hasDex = input.ReadInt32(ref result.dex_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasDex {
        get { return result.hasDex; }
      }
      public int Dex {
        get { return result.Dex; }
        set { SetDex(value); }
      }
      public Builder SetDex(int value) {
        PrepareBuilder();
        result.hasDex = true;
        result.dex_ = value;
        return this;
      }
      public Builder ClearDex() {
        PrepareBuilder();
        result.hasDex = false;
        result.dex_ = 0;
        return this;
      }
    }
    static POKEMON() {
      object.ReferenceEquals(global::packets.Testpacket.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
