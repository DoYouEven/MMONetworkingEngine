// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace packetSpeed {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public static partial class Testpacket {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_packetSpeed_PacketSpeed__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::packetSpeed.PacketSpeed, global::packetSpeed.PacketSpeed.Builder> internal__static_packetSpeed_PacketSpeed__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Testpacket() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChB0ZXN0cGFja2V0LnByb3RvEgtwYWNrZXRTcGVlZCJaCgtQYWNrZXRTcGVl" + 
          "ZBIsCgR0eXBlGAEgAigOMhcucGFja2V0U3BlZWQuUGFja2V0VFlQRToFTG9n" + 
          "aW4SDgoGU3RyaW5nGAIgAygJEg0KBUZsb2F0GAMgAygCKiEKClBhY2tldFRZ" + 
          "UEUSCQoFTG9naW4QABIICgRDaGF0EAFCAkgB");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_packetSpeed_PacketSpeed__Descriptor = Descriptor.MessageTypes[0];
        internal__static_packetSpeed_PacketSpeed__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::packetSpeed.PacketSpeed, global::packetSpeed.PacketSpeed.Builder>(internal__static_packetSpeed_PacketSpeed__Descriptor,
                new string[] { "Type", "String", "Float", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public enum PacketTYPE {
    Login = 0,
    Chat = 1,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
  public sealed partial class PacketSpeed : pb::GeneratedMessage<PacketSpeed, PacketSpeed.Builder> {
    private PacketSpeed() { }
    private static readonly PacketSpeed defaultInstance = new PacketSpeed().MakeReadOnly();
    private static readonly string[] _packetSpeedFieldNames = new string[] { "Float", "String", "type" };
    private static readonly uint[] _packetSpeedFieldTags = new uint[] { 29, 18, 8 };
    public static PacketSpeed DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PacketSpeed DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PacketSpeed ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::packetSpeed.Testpacket.internal__static_packetSpeed_PacketSpeed__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PacketSpeed, PacketSpeed.Builder> InternalFieldAccessors {
      get { return global::packetSpeed.Testpacket.internal__static_packetSpeed_PacketSpeed__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::packetSpeed.PacketTYPE type_ = global::packetSpeed.PacketTYPE.Login;
    public bool HasType {
      get { return hasType; }
    }
    public global::packetSpeed.PacketTYPE Type {
      get { return type_; }
    }
    
    public const int StringFieldNumber = 2;
    private pbc::PopsicleList<string> string_ = new pbc::PopsicleList<string>();
    public scg::IList<string> StringList {
      get { return pbc::Lists.AsReadOnly(string_); }
    }
    public int StringCount {
      get { return string_.Count; }
    }
    public string GetString(int index) {
      return string_[index];
    }
    
    public const int FloatFieldNumber = 3;
    private pbc::PopsicleList<float> float_ = new pbc::PopsicleList<float>();
    public scg::IList<float> FloatList {
      get { return pbc::Lists.AsReadOnly(float_); }
    }
    public int FloatCount {
      get { return float_.Count; }
    }
    public float GetFloat(int index) {
      return float_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _packetSpeedFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[2], (int) Type, Type);
      }
      if (string_.Count > 0) {
        output.WriteStringArray(2, field_names[1], string_);
      }
      if (float_.Count > 0) {
        output.WriteFloatArray(3, field_names[0], float_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
        }
        {
          int dataSize = 0;
          foreach (string element in StringList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * string_.Count;
        }
        {
          int dataSize = 0;
          dataSize = 4 * float_.Count;
          size += dataSize;
          size += 1 * float_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PacketSpeed ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PacketSpeed ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PacketSpeed ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PacketSpeed ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PacketSpeed ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PacketSpeed ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PacketSpeed ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PacketSpeed ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PacketSpeed ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PacketSpeed ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PacketSpeed MakeReadOnly() {
      string_.MakeReadOnly();
      float_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PacketSpeed prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.3.0.277")]
    public sealed partial class Builder : pb::GeneratedBuilder<PacketSpeed, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PacketSpeed cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PacketSpeed result;
      
      private PacketSpeed PrepareBuilder() {
        if (resultIsReadOnly) {
          PacketSpeed original = result;
          result = new PacketSpeed();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PacketSpeed MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::packetSpeed.PacketSpeed.Descriptor; }
      }
      
      public override PacketSpeed DefaultInstanceForType {
        get { return global::packetSpeed.PacketSpeed.DefaultInstance; }
      }
      
      public override PacketSpeed BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PacketSpeed) {
          return MergeFrom((PacketSpeed) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PacketSpeed other) {
        if (other == global::packetSpeed.PacketSpeed.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.string_.Count != 0) {
          result.string_.Add(other.string_);
        }
        if (other.float_.Count != 0) {
          result.float_.Add(other.float_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_packetSpeedFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _packetSpeedFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.string_);
              break;
            }
            case 26:
            case 29: {
              input.ReadFloatArray(tag, field_name, result.float_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::packetSpeed.PacketTYPE Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::packetSpeed.PacketTYPE value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::packetSpeed.PacketTYPE.Login;
        return this;
      }
      
      public pbc::IPopsicleList<string> StringList {
        get { return PrepareBuilder().string_; }
      }
      public int StringCount {
        get { return result.StringCount; }
      }
      public string GetString(int index) {
        return result.GetString(index);
      }
      public Builder SetString(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.string_[index] = value;
        return this;
      }
      public Builder AddString(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.string_.Add(value);
        return this;
      }
      public Builder AddRangeString(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.string_.Add(values);
        return this;
      }
      public Builder ClearString() {
        PrepareBuilder();
        result.string_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<float> FloatList {
        get { return PrepareBuilder().float_; }
      }
      public int FloatCount {
        get { return result.FloatCount; }
      }
      public float GetFloat(int index) {
        return result.GetFloat(index);
      }
      public Builder SetFloat(int index, float value) {
        PrepareBuilder();
        result.float_[index] = value;
        return this;
      }
      public Builder AddFloat(float value) {
        PrepareBuilder();
        result.float_.Add(value);
        return this;
      }
      public Builder AddRangeFloat(scg::IEnumerable<float> values) {
        PrepareBuilder();
        result.float_.Add(values);
        return this;
      }
      public Builder ClearFloat() {
        PrepareBuilder();
        result.float_.Clear();
        return this;
      }
    }
    static PacketSpeed() {
      object.ReferenceEquals(global::packetSpeed.Testpacket.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
